# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from manticoresearch.models.base_model import Model
from manticoresearch import util


class ReplaceDocumentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, doc: object=None):
        """ReplaceDocumentRequest - a model defined in OpenAPI

        :param doc: The doc of this ReplaceDocumentRequest.
        """
        self.openapi_types = {
            'doc': object
        }

        self.attribute_map = {
            'doc': 'doc'
        }

        self._doc = doc

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReplaceDocumentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The replaceDocumentRequest of this ReplaceDocumentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def doc(self):
        """Gets the doc of this ReplaceDocumentRequest.

        Object containing the new document data to replace the existing one.

        :return: The doc of this ReplaceDocumentRequest.
        :rtype: object
        """
        return self._doc

    @doc.setter
    def doc(self, doc):
        """Sets the doc of this ReplaceDocumentRequest.

        Object containing the new document data to replace the existing one.

        :param doc: The doc of this ReplaceDocumentRequest.
        :type doc: object
        """
        if doc is None:
            raise ValueError("Invalid value for `doc`, must not be `None`")

        self._doc = doc
