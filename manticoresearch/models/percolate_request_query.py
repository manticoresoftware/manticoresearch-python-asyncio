# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from manticoresearch.models.base_model import Model
from manticoresearch import util


class PercolateRequestQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, percolate: object=None):
        """PercolateRequestQuery - a model defined in OpenAPI

        :param percolate: The percolate of this PercolateRequestQuery.
        """
        self.openapi_types = {
            'percolate': object
        }

        self.attribute_map = {
            'percolate': 'percolate'
        }

        self._percolate = percolate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PercolateRequestQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The percolateRequest_query of this PercolateRequestQuery.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def percolate(self):
        """Gets the percolate of this PercolateRequestQuery.

        Object representing the document to percolate

        :return: The percolate of this PercolateRequestQuery.
        :rtype: object
        """
        return self._percolate

    @percolate.setter
    def percolate(self, percolate):
        """Sets the percolate of this PercolateRequestQuery.

        Object representing the document to percolate

        :param percolate: The percolate of this PercolateRequestQuery.
        :type percolate: object
        """
        if percolate is None:
            raise ValueError("Invalid value for `percolate`, must not be `None`")

        self._percolate = percolate
