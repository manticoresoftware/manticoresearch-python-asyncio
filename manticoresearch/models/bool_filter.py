# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from manticoresearch.models.base_model import Model
from manticoresearch import util


class BoolFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, must: List[QueryFilter]=None, must_not: List[QueryFilter]=None, should: List[QueryFilter]=None):
        """BoolFilter - a model defined in OpenAPI

        :param must: The must of this BoolFilter.
        :param must_not: The must_not of this BoolFilter.
        :param should: The should of this BoolFilter.
        """
        self.openapi_types = {
            'must': List[QueryFilter],
            'must_not': List[QueryFilter],
            'should': List[QueryFilter]
        }

        self.attribute_map = {
            'must': 'must',
            'must_not': 'must_not',
            'should': 'should'
        }

        self._must = must
        self._must_not = must_not
        self._should = should

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BoolFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The boolFilter of this BoolFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def must(self):
        """Gets the must of this BoolFilter.

        Query clauses that must match for the document to be included

        :return: The must of this BoolFilter.
        :rtype: List[QueryFilter]
        """
        return self._must

    @must.setter
    def must(self, must):
        """Sets the must of this BoolFilter.

        Query clauses that must match for the document to be included

        :param must: The must of this BoolFilter.
        :type must: List[QueryFilter]
        """

        self._must = must

    @property
    def must_not(self):
        """Gets the must_not of this BoolFilter.

        Query clauses that must not match for the document to be included

        :return: The must_not of this BoolFilter.
        :rtype: List[QueryFilter]
        """
        return self._must_not

    @must_not.setter
    def must_not(self, must_not):
        """Sets the must_not of this BoolFilter.

        Query clauses that must not match for the document to be included

        :param must_not: The must_not of this BoolFilter.
        :type must_not: List[QueryFilter]
        """

        self._must_not = must_not

    @property
    def should(self):
        """Gets the should of this BoolFilter.

        Query clauses that should be matched, but are not required

        :return: The should of this BoolFilter.
        :rtype: List[QueryFilter]
        """
        return self._should

    @should.setter
    def should(self, should):
        """Sets the should of this BoolFilter.

        Query clauses that should be matched, but are not required

        :param should: The should of this BoolFilter.
        :type should: List[QueryFilter]
        """

        self._should = should
