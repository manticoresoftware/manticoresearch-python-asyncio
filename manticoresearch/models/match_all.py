# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from manticoresearch.models.base_model import Model
from manticoresearch import util


class MatchAll(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, all: str=None):
        """MatchAll - a model defined in OpenAPI

        :param all: The all of this MatchAll.
        """
        self.openapi_types = {
            'all': str
        }

        self.attribute_map = {
            'all': '_all'
        }

        self._all = all

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatchAll':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The match_all of this MatchAll.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def all(self):
        """Gets the all of this MatchAll.


        :return: The all of this MatchAll.
        :rtype: str
        """
        return self._all

    @all.setter
    def all(self, all):
        """Sets the all of this MatchAll.


        :param all: The all of this MatchAll.
        :type all: str
        """
        allowed_values = ["{}"]  # noqa: E501
        if all not in allowed_values:
            raise ValueError(
                "Invalid value for `all` ({0}), must be one of {1}"
                .format(all, allowed_values)
            )

        self._all = all
