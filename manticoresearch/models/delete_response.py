# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from manticoresearch.models.base_model import Model
from manticoresearch import util


class DeleteResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, table: str=None, deleted: int=None, id: int=None, found: bool=None, result: str=None):
        """DeleteResponse - a model defined in OpenAPI

        :param table: The table of this DeleteResponse.
        :param deleted: The deleted of this DeleteResponse.
        :param id: The id of this DeleteResponse.
        :param found: The found of this DeleteResponse.
        :param result: The result of this DeleteResponse.
        """
        self.openapi_types = {
            'table': str,
            'deleted': int,
            'id': int,
            'found': bool,
            'result': str
        }

        self.attribute_map = {
            'table': 'table',
            'deleted': 'deleted',
            'id': 'id',
            'found': 'found',
            'result': 'result'
        }

        self._table = table
        self._deleted = deleted
        self._id = id
        self._found = found
        self._result = result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The deleteResponse of this DeleteResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def table(self):
        """Gets the table of this DeleteResponse.

        The name of the table from which the document was deleted

        :return: The table of this DeleteResponse.
        :rtype: str
        """
        return self._table

    @table.setter
    def table(self, table):
        """Sets the table of this DeleteResponse.

        The name of the table from which the document was deleted

        :param table: The table of this DeleteResponse.
        :type table: str
        """

        self._table = table

    @property
    def deleted(self):
        """Gets the deleted of this DeleteResponse.

        Number of documents deleted

        :return: The deleted of this DeleteResponse.
        :rtype: int
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this DeleteResponse.

        Number of documents deleted

        :param deleted: The deleted of this DeleteResponse.
        :type deleted: int
        """

        self._deleted = deleted

    @property
    def id(self):
        """Gets the id of this DeleteResponse.

        The ID of the deleted document. If multiple documents are deleted, the ID of the first deleted document is returned

        :return: The id of this DeleteResponse.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DeleteResponse.

        The ID of the deleted document. If multiple documents are deleted, the ID of the first deleted document is returned

        :param id: The id of this DeleteResponse.
        :type id: int
        """

        self._id = id

    @property
    def found(self):
        """Gets the found of this DeleteResponse.

        Indicates whether any documents to be deleted were found

        :return: The found of this DeleteResponse.
        :rtype: bool
        """
        return self._found

    @found.setter
    def found(self, found):
        """Sets the found of this DeleteResponse.

        Indicates whether any documents to be deleted were found

        :param found: The found of this DeleteResponse.
        :type found: bool
        """

        self._found = found

    @property
    def result(self):
        """Gets the result of this DeleteResponse.

        Result of the delete operation, typically 'deleted'

        :return: The result of this DeleteResponse.
        :rtype: str
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this DeleteResponse.

        Result of the delete operation, typically 'deleted'

        :param result: The result of this DeleteResponse.
        :type result: str
        """

        self._result = result
