# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from manticoresearch.models.base_model import Model
from manticoresearch import util


class FulltextFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, query_string: str=None, match: object=None, match_phrase: object=None, match_all: object=None):
        """FulltextFilter - a model defined in OpenAPI

        :param query_string: The query_string of this FulltextFilter.
        :param match: The match of this FulltextFilter.
        :param match_phrase: The match_phrase of this FulltextFilter.
        :param match_all: The match_all of this FulltextFilter.
        """
        self.openapi_types = {
            'query_string': str,
            'match': object,
            'match_phrase': object,
            'match_all': object
        }

        self.attribute_map = {
            'query_string': 'query_string',
            'match': 'match',
            'match_phrase': 'match_phrase',
            'match_all': 'match_all'
        }

        self._query_string = query_string
        self._match = match
        self._match_phrase = match_phrase
        self._match_all = match_all

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FulltextFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The fulltextFilter of this FulltextFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def query_string(self):
        """Gets the query_string of this FulltextFilter.

        Filter object defining a query string

        :return: The query_string of this FulltextFilter.
        :rtype: str
        """
        return self._query_string

    @query_string.setter
    def query_string(self, query_string):
        """Sets the query_string of this FulltextFilter.

        Filter object defining a query string

        :param query_string: The query_string of this FulltextFilter.
        :type query_string: str
        """

        self._query_string = query_string

    @property
    def match(self):
        """Gets the match of this FulltextFilter.

        Filter object defining a match keyword passed as a string or in a Match object

        :return: The match of this FulltextFilter.
        :rtype: object
        """
        return self._match

    @match.setter
    def match(self, match):
        """Sets the match of this FulltextFilter.

        Filter object defining a match keyword passed as a string or in a Match object

        :param match: The match of this FulltextFilter.
        :type match: object
        """

        self._match = match

    @property
    def match_phrase(self):
        """Gets the match_phrase of this FulltextFilter.

        Filter object defining a match phrase

        :return: The match_phrase of this FulltextFilter.
        :rtype: object
        """
        return self._match_phrase

    @match_phrase.setter
    def match_phrase(self, match_phrase):
        """Sets the match_phrase of this FulltextFilter.

        Filter object defining a match phrase

        :param match_phrase: The match_phrase of this FulltextFilter.
        :type match_phrase: object
        """

        self._match_phrase = match_phrase

    @property
    def match_all(self):
        """Gets the match_all of this FulltextFilter.

        Filter object to select all documents

        :return: The match_all of this FulltextFilter.
        :rtype: object
        """
        return self._match_all

    @match_all.setter
    def match_all(self, match_all):
        """Sets the match_all of this FulltextFilter.

        Filter object to select all documents

        :param match_all: The match_all of this FulltextFilter.
        :type match_all: object
        """

        self._match_all = match_all
