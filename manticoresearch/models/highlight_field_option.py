# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from manticoresearch.models.base_model import Model
from manticoresearch import util


class HighlightFieldOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fragment_size: int=None, limit: int=None, limit_snippets: int=None, limit_words: int=None, number_of_fragments: int=None):
        """HighlightFieldOption - a model defined in OpenAPI

        :param fragment_size: The fragment_size of this HighlightFieldOption.
        :param limit: The limit of this HighlightFieldOption.
        :param limit_snippets: The limit_snippets of this HighlightFieldOption.
        :param limit_words: The limit_words of this HighlightFieldOption.
        :param number_of_fragments: The number_of_fragments of this HighlightFieldOption.
        """
        self.openapi_types = {
            'fragment_size': int,
            'limit': int,
            'limit_snippets': int,
            'limit_words': int,
            'number_of_fragments': int
        }

        self.attribute_map = {
            'fragment_size': 'fragment_size',
            'limit': 'limit',
            'limit_snippets': 'limit_snippets',
            'limit_words': 'limit_words',
            'number_of_fragments': 'number_of_fragments'
        }

        self._fragment_size = fragment_size
        self._limit = limit
        self._limit_snippets = limit_snippets
        self._limit_words = limit_words
        self._number_of_fragments = number_of_fragments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HighlightFieldOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The highlightFieldOption of this HighlightFieldOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fragment_size(self):
        """Gets the fragment_size of this HighlightFieldOption.

        Maximum size of the text fragments in highlighted snippets per field

        :return: The fragment_size of this HighlightFieldOption.
        :rtype: int
        """
        return self._fragment_size

    @fragment_size.setter
    def fragment_size(self, fragment_size):
        """Sets the fragment_size of this HighlightFieldOption.

        Maximum size of the text fragments in highlighted snippets per field

        :param fragment_size: The fragment_size of this HighlightFieldOption.
        :type fragment_size: int
        """

        self._fragment_size = fragment_size

    @property
    def limit(self):
        """Gets the limit of this HighlightFieldOption.

        Maximum size of snippets per field

        :return: The limit of this HighlightFieldOption.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this HighlightFieldOption.

        Maximum size of snippets per field

        :param limit: The limit of this HighlightFieldOption.
        :type limit: int
        """

        self._limit = limit

    @property
    def limit_snippets(self):
        """Gets the limit_snippets of this HighlightFieldOption.

        Maximum number of snippets per field

        :return: The limit_snippets of this HighlightFieldOption.
        :rtype: int
        """
        return self._limit_snippets

    @limit_snippets.setter
    def limit_snippets(self, limit_snippets):
        """Sets the limit_snippets of this HighlightFieldOption.

        Maximum number of snippets per field

        :param limit_snippets: The limit_snippets of this HighlightFieldOption.
        :type limit_snippets: int
        """

        self._limit_snippets = limit_snippets

    @property
    def limit_words(self):
        """Gets the limit_words of this HighlightFieldOption.

        Maximum number of words per field

        :return: The limit_words of this HighlightFieldOption.
        :rtype: int
        """
        return self._limit_words

    @limit_words.setter
    def limit_words(self, limit_words):
        """Sets the limit_words of this HighlightFieldOption.

        Maximum number of words per field

        :param limit_words: The limit_words of this HighlightFieldOption.
        :type limit_words: int
        """

        self._limit_words = limit_words

    @property
    def number_of_fragments(self):
        """Gets the number_of_fragments of this HighlightFieldOption.

        Total number of highlighted fragments per field

        :return: The number_of_fragments of this HighlightFieldOption.
        :rtype: int
        """
        return self._number_of_fragments

    @number_of_fragments.setter
    def number_of_fragments(self, number_of_fragments):
        """Sets the number_of_fragments of this HighlightFieldOption.

        Total number of highlighted fragments per field

        :param number_of_fragments: The number_of_fragments of this HighlightFieldOption.
        :type number_of_fragments: int
        """

        self._number_of_fragments = number_of_fragments
