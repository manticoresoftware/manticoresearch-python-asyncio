# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from manticoresearch.models.base_model import Model
from manticoresearch import util


class UpdateDocumentRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, table: str=None, cluster: str=None, doc: object=None, id: int=None, query: QueryFilter=None):
        """UpdateDocumentRequest - a model defined in OpenAPI

        :param table: The table of this UpdateDocumentRequest.
        :param cluster: The cluster of this UpdateDocumentRequest.
        :param doc: The doc of this UpdateDocumentRequest.
        :param id: The id of this UpdateDocumentRequest.
        :param query: The query of this UpdateDocumentRequest.
        """
        self.openapi_types = {
            'table': str,
            'cluster': str,
            'doc': object,
            'id': int,
            'query': QueryFilter
        }

        self.attribute_map = {
            'table': 'table',
            'cluster': 'cluster',
            'doc': 'doc',
            'id': 'id',
            'query': 'query'
        }

        self._table = table
        self._cluster = cluster
        self._doc = doc
        self._id = id
        self._query = query

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateDocumentRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateDocumentRequest of this UpdateDocumentRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def table(self):
        """Gets the table of this UpdateDocumentRequest.

        Name of the document table

        :return: The table of this UpdateDocumentRequest.
        :rtype: str
        """
        return self._table

    @table.setter
    def table(self, table):
        """Sets the table of this UpdateDocumentRequest.

        Name of the document table

        :param table: The table of this UpdateDocumentRequest.
        :type table: str
        """
        if table is None:
            raise ValueError("Invalid value for `table`, must not be `None`")

        self._table = table

    @property
    def cluster(self):
        """Gets the cluster of this UpdateDocumentRequest.

        Name of the document cluster

        :return: The cluster of this UpdateDocumentRequest.
        :rtype: str
        """
        return self._cluster

    @cluster.setter
    def cluster(self, cluster):
        """Sets the cluster of this UpdateDocumentRequest.

        Name of the document cluster

        :param cluster: The cluster of this UpdateDocumentRequest.
        :type cluster: str
        """

        self._cluster = cluster

    @property
    def doc(self):
        """Gets the doc of this UpdateDocumentRequest.

        Object containing the document fields to update

        :return: The doc of this UpdateDocumentRequest.
        :rtype: object
        """
        return self._doc

    @doc.setter
    def doc(self, doc):
        """Sets the doc of this UpdateDocumentRequest.

        Object containing the document fields to update

        :param doc: The doc of this UpdateDocumentRequest.
        :type doc: object
        """
        if doc is None:
            raise ValueError("Invalid value for `doc`, must not be `None`")

        self._doc = doc

    @property
    def id(self):
        """Gets the id of this UpdateDocumentRequest.

        Document ID

        :return: The id of this UpdateDocumentRequest.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateDocumentRequest.

        Document ID

        :param id: The id of this UpdateDocumentRequest.
        :type id: int
        """

        self._id = id

    @property
    def query(self):
        """Gets the query of this UpdateDocumentRequest.


        :return: The query of this UpdateDocumentRequest.
        :rtype: QueryFilter
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this UpdateDocumentRequest.


        :param query: The query of this UpdateDocumentRequest.
        :type query: QueryFilter
        """

        self._query = query
